/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package xdrSchema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class XdrRtspInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4054803163850219492L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"XdrRtspInfo\",\"namespace\":\"xdrSchema\",\"fields\":[{\"name\":\"CStartPort\",\"type\":\"int\",\"default\":0},{\"name\":\"CEndPort\",\"type\":\"int\",\"default\":0},{\"name\":\"SStartPort\",\"type\":\"int\",\"default\":0},{\"name\":\"SEndPort\",\"type\":\"int\",\"default\":0},{\"name\":\"SsnVideoCount\",\"type\":\"int\",\"default\":0},{\"name\":\"SsnAudioCount\",\"type\":\"int\",\"default\":0},{\"name\":\"ResDelay\",\"type\":\"long\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<XdrRtspInfo> ENCODER =
      new BinaryMessageEncoder<XdrRtspInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<XdrRtspInfo> DECODER =
      new BinaryMessageDecoder<XdrRtspInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<XdrRtspInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<XdrRtspInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<XdrRtspInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this XdrRtspInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a XdrRtspInfo from a ByteBuffer. */
  public static XdrRtspInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int CStartPort;
  @Deprecated public int CEndPort;
  @Deprecated public int SStartPort;
  @Deprecated public int SEndPort;
  @Deprecated public int SsnVideoCount;
  @Deprecated public int SsnAudioCount;
  @Deprecated public long ResDelay;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public XdrRtspInfo() {}

  /**
   * All-args constructor.
   * @param CStartPort The new value for CStartPort
   * @param CEndPort The new value for CEndPort
   * @param SStartPort The new value for SStartPort
   * @param SEndPort The new value for SEndPort
   * @param SsnVideoCount The new value for SsnVideoCount
   * @param SsnAudioCount The new value for SsnAudioCount
   * @param ResDelay The new value for ResDelay
   */
  public XdrRtspInfo(java.lang.Integer CStartPort, java.lang.Integer CEndPort, java.lang.Integer SStartPort, java.lang.Integer SEndPort, java.lang.Integer SsnVideoCount, java.lang.Integer SsnAudioCount, java.lang.Long ResDelay) {
    this.CStartPort = CStartPort;
    this.CEndPort = CEndPort;
    this.SStartPort = SStartPort;
    this.SEndPort = SEndPort;
    this.SsnVideoCount = SsnVideoCount;
    this.SsnAudioCount = SsnAudioCount;
    this.ResDelay = ResDelay;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return CStartPort;
    case 1: return CEndPort;
    case 2: return SStartPort;
    case 3: return SEndPort;
    case 4: return SsnVideoCount;
    case 5: return SsnAudioCount;
    case 6: return ResDelay;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: CStartPort = (java.lang.Integer)value$; break;
    case 1: CEndPort = (java.lang.Integer)value$; break;
    case 2: SStartPort = (java.lang.Integer)value$; break;
    case 3: SEndPort = (java.lang.Integer)value$; break;
    case 4: SsnVideoCount = (java.lang.Integer)value$; break;
    case 5: SsnAudioCount = (java.lang.Integer)value$; break;
    case 6: ResDelay = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'CStartPort' field.
   * @return The value of the 'CStartPort' field.
   */
  public java.lang.Integer getCStartPort() {
    return CStartPort;
  }

  /**
   * Sets the value of the 'CStartPort' field.
   * @param value the value to set.
   */
  public void setCStartPort(java.lang.Integer value) {
    this.CStartPort = value;
  }

  /**
   * Gets the value of the 'CEndPort' field.
   * @return The value of the 'CEndPort' field.
   */
  public java.lang.Integer getCEndPort() {
    return CEndPort;
  }

  /**
   * Sets the value of the 'CEndPort' field.
   * @param value the value to set.
   */
  public void setCEndPort(java.lang.Integer value) {
    this.CEndPort = value;
  }

  /**
   * Gets the value of the 'SStartPort' field.
   * @return The value of the 'SStartPort' field.
   */
  public java.lang.Integer getSStartPort() {
    return SStartPort;
  }

  /**
   * Sets the value of the 'SStartPort' field.
   * @param value the value to set.
   */
  public void setSStartPort(java.lang.Integer value) {
    this.SStartPort = value;
  }

  /**
   * Gets the value of the 'SEndPort' field.
   * @return The value of the 'SEndPort' field.
   */
  public java.lang.Integer getSEndPort() {
    return SEndPort;
  }

  /**
   * Sets the value of the 'SEndPort' field.
   * @param value the value to set.
   */
  public void setSEndPort(java.lang.Integer value) {
    this.SEndPort = value;
  }

  /**
   * Gets the value of the 'SsnVideoCount' field.
   * @return The value of the 'SsnVideoCount' field.
   */
  public java.lang.Integer getSsnVideoCount() {
    return SsnVideoCount;
  }

  /**
   * Sets the value of the 'SsnVideoCount' field.
   * @param value the value to set.
   */
  public void setSsnVideoCount(java.lang.Integer value) {
    this.SsnVideoCount = value;
  }

  /**
   * Gets the value of the 'SsnAudioCount' field.
   * @return The value of the 'SsnAudioCount' field.
   */
  public java.lang.Integer getSsnAudioCount() {
    return SsnAudioCount;
  }

  /**
   * Sets the value of the 'SsnAudioCount' field.
   * @param value the value to set.
   */
  public void setSsnAudioCount(java.lang.Integer value) {
    this.SsnAudioCount = value;
  }

  /**
   * Gets the value of the 'ResDelay' field.
   * @return The value of the 'ResDelay' field.
   */
  public java.lang.Long getResDelay() {
    return ResDelay;
  }

  /**
   * Sets the value of the 'ResDelay' field.
   * @param value the value to set.
   */
  public void setResDelay(java.lang.Long value) {
    this.ResDelay = value;
  }

  /**
   * Creates a new XdrRtspInfo RecordBuilder.
   * @return A new XdrRtspInfo RecordBuilder
   */
  public static xdrSchema.XdrRtspInfo.Builder newBuilder() {
    return new xdrSchema.XdrRtspInfo.Builder();
  }

  /**
   * Creates a new XdrRtspInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new XdrRtspInfo RecordBuilder
   */
  public static xdrSchema.XdrRtspInfo.Builder newBuilder(xdrSchema.XdrRtspInfo.Builder other) {
    return new xdrSchema.XdrRtspInfo.Builder(other);
  }

  /**
   * Creates a new XdrRtspInfo RecordBuilder by copying an existing XdrRtspInfo instance.
   * @param other The existing instance to copy.
   * @return A new XdrRtspInfo RecordBuilder
   */
  public static xdrSchema.XdrRtspInfo.Builder newBuilder(xdrSchema.XdrRtspInfo other) {
    return new xdrSchema.XdrRtspInfo.Builder(other);
  }

  /**
   * RecordBuilder for XdrRtspInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<XdrRtspInfo>
    implements org.apache.avro.data.RecordBuilder<XdrRtspInfo> {

    private int CStartPort;
    private int CEndPort;
    private int SStartPort;
    private int SEndPort;
    private int SsnVideoCount;
    private int SsnAudioCount;
    private long ResDelay;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(xdrSchema.XdrRtspInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CStartPort)) {
        this.CStartPort = data().deepCopy(fields()[0].schema(), other.CStartPort);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CEndPort)) {
        this.CEndPort = data().deepCopy(fields()[1].schema(), other.CEndPort);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SStartPort)) {
        this.SStartPort = data().deepCopy(fields()[2].schema(), other.SStartPort);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SEndPort)) {
        this.SEndPort = data().deepCopy(fields()[3].schema(), other.SEndPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.SsnVideoCount)) {
        this.SsnVideoCount = data().deepCopy(fields()[4].schema(), other.SsnVideoCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.SsnAudioCount)) {
        this.SsnAudioCount = data().deepCopy(fields()[5].schema(), other.SsnAudioCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ResDelay)) {
        this.ResDelay = data().deepCopy(fields()[6].schema(), other.ResDelay);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing XdrRtspInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(xdrSchema.XdrRtspInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.CStartPort)) {
        this.CStartPort = data().deepCopy(fields()[0].schema(), other.CStartPort);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CEndPort)) {
        this.CEndPort = data().deepCopy(fields()[1].schema(), other.CEndPort);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SStartPort)) {
        this.SStartPort = data().deepCopy(fields()[2].schema(), other.SStartPort);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SEndPort)) {
        this.SEndPort = data().deepCopy(fields()[3].schema(), other.SEndPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.SsnVideoCount)) {
        this.SsnVideoCount = data().deepCopy(fields()[4].schema(), other.SsnVideoCount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.SsnAudioCount)) {
        this.SsnAudioCount = data().deepCopy(fields()[5].schema(), other.SsnAudioCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ResDelay)) {
        this.ResDelay = data().deepCopy(fields()[6].schema(), other.ResDelay);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'CStartPort' field.
      * @return The value.
      */
    public java.lang.Integer getCStartPort() {
      return CStartPort;
    }

    /**
      * Sets the value of the 'CStartPort' field.
      * @param value The value of 'CStartPort'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setCStartPort(int value) {
      validate(fields()[0], value);
      this.CStartPort = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'CStartPort' field has been set.
      * @return True if the 'CStartPort' field has been set, false otherwise.
      */
    public boolean hasCStartPort() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'CStartPort' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearCStartPort() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CEndPort' field.
      * @return The value.
      */
    public java.lang.Integer getCEndPort() {
      return CEndPort;
    }

    /**
      * Sets the value of the 'CEndPort' field.
      * @param value The value of 'CEndPort'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setCEndPort(int value) {
      validate(fields()[1], value);
      this.CEndPort = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CEndPort' field has been set.
      * @return True if the 'CEndPort' field has been set, false otherwise.
      */
    public boolean hasCEndPort() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CEndPort' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearCEndPort() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'SStartPort' field.
      * @return The value.
      */
    public java.lang.Integer getSStartPort() {
      return SStartPort;
    }

    /**
      * Sets the value of the 'SStartPort' field.
      * @param value The value of 'SStartPort'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setSStartPort(int value) {
      validate(fields()[2], value);
      this.SStartPort = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'SStartPort' field has been set.
      * @return True if the 'SStartPort' field has been set, false otherwise.
      */
    public boolean hasSStartPort() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'SStartPort' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearSStartPort() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'SEndPort' field.
      * @return The value.
      */
    public java.lang.Integer getSEndPort() {
      return SEndPort;
    }

    /**
      * Sets the value of the 'SEndPort' field.
      * @param value The value of 'SEndPort'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setSEndPort(int value) {
      validate(fields()[3], value);
      this.SEndPort = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'SEndPort' field has been set.
      * @return True if the 'SEndPort' field has been set, false otherwise.
      */
    public boolean hasSEndPort() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'SEndPort' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearSEndPort() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'SsnVideoCount' field.
      * @return The value.
      */
    public java.lang.Integer getSsnVideoCount() {
      return SsnVideoCount;
    }

    /**
      * Sets the value of the 'SsnVideoCount' field.
      * @param value The value of 'SsnVideoCount'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setSsnVideoCount(int value) {
      validate(fields()[4], value);
      this.SsnVideoCount = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'SsnVideoCount' field has been set.
      * @return True if the 'SsnVideoCount' field has been set, false otherwise.
      */
    public boolean hasSsnVideoCount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'SsnVideoCount' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearSsnVideoCount() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'SsnAudioCount' field.
      * @return The value.
      */
    public java.lang.Integer getSsnAudioCount() {
      return SsnAudioCount;
    }

    /**
      * Sets the value of the 'SsnAudioCount' field.
      * @param value The value of 'SsnAudioCount'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setSsnAudioCount(int value) {
      validate(fields()[5], value);
      this.SsnAudioCount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'SsnAudioCount' field has been set.
      * @return True if the 'SsnAudioCount' field has been set, false otherwise.
      */
    public boolean hasSsnAudioCount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'SsnAudioCount' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearSsnAudioCount() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ResDelay' field.
      * @return The value.
      */
    public java.lang.Long getResDelay() {
      return ResDelay;
    }

    /**
      * Sets the value of the 'ResDelay' field.
      * @param value The value of 'ResDelay'.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder setResDelay(long value) {
      validate(fields()[6], value);
      this.ResDelay = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ResDelay' field has been set.
      * @return True if the 'ResDelay' field has been set, false otherwise.
      */
    public boolean hasResDelay() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ResDelay' field.
      * @return This builder.
      */
    public xdrSchema.XdrRtspInfo.Builder clearResDelay() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @SuppressWarnings("unchecked")
    public XdrRtspInfo build() {
      try {
        XdrRtspInfo record = new XdrRtspInfo();
        record.CStartPort = fieldSetFlags()[0] ? this.CStartPort : (java.lang.Integer) defaultValue(fields()[0]);
        record.CEndPort = fieldSetFlags()[1] ? this.CEndPort : (java.lang.Integer) defaultValue(fields()[1]);
        record.SStartPort = fieldSetFlags()[2] ? this.SStartPort : (java.lang.Integer) defaultValue(fields()[2]);
        record.SEndPort = fieldSetFlags()[3] ? this.SEndPort : (java.lang.Integer) defaultValue(fields()[3]);
        record.SsnVideoCount = fieldSetFlags()[4] ? this.SsnVideoCount : (java.lang.Integer) defaultValue(fields()[4]);
        record.SsnAudioCount = fieldSetFlags()[5] ? this.SsnAudioCount : (java.lang.Integer) defaultValue(fields()[5]);
        record.ResDelay = fieldSetFlags()[6] ? this.ResDelay : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<XdrRtspInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<XdrRtspInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<XdrRtspInfo>
    READER$ = (org.apache.avro.io.DatumReader<XdrRtspInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
