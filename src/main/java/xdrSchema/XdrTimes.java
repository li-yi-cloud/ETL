/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package xdrSchema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class XdrTimes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7756824799092419642L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"XdrTimes\",\"namespace\":\"xdrSchema\",\"fields\":[{\"name\":\"SsnInitTime\",\"type\":\"long\",\"default\":0},{\"name\":\"StartTime\",\"type\":\"long\",\"default\":0},{\"name\":\"EndTime\",\"type\":\"long\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<XdrTimes> ENCODER =
      new BinaryMessageEncoder<XdrTimes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<XdrTimes> DECODER =
      new BinaryMessageDecoder<XdrTimes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<XdrTimes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<XdrTimes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<XdrTimes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this XdrTimes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a XdrTimes from a ByteBuffer. */
  public static XdrTimes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long SsnInitTime;
  @Deprecated public long StartTime;
  @Deprecated public long EndTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public XdrTimes() {}

  /**
   * All-args constructor.
   * @param SsnInitTime The new value for SsnInitTime
   * @param StartTime The new value for StartTime
   * @param EndTime The new value for EndTime
   */
  public XdrTimes(java.lang.Long SsnInitTime, java.lang.Long StartTime, java.lang.Long EndTime) {
    this.SsnInitTime = SsnInitTime;
    this.StartTime = StartTime;
    this.EndTime = EndTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return SsnInitTime;
    case 1: return StartTime;
    case 2: return EndTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: SsnInitTime = (java.lang.Long)value$; break;
    case 1: StartTime = (java.lang.Long)value$; break;
    case 2: EndTime = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'SsnInitTime' field.
   * @return The value of the 'SsnInitTime' field.
   */
  public java.lang.Long getSsnInitTime() {
    return SsnInitTime;
  }

  /**
   * Sets the value of the 'SsnInitTime' field.
   * @param value the value to set.
   */
  public void setSsnInitTime(java.lang.Long value) {
    this.SsnInitTime = value;
  }

  /**
   * Gets the value of the 'StartTime' field.
   * @return The value of the 'StartTime' field.
   */
  public java.lang.Long getStartTime() {
    return StartTime;
  }

  /**
   * Sets the value of the 'StartTime' field.
   * @param value the value to set.
   */
  public void setStartTime(java.lang.Long value) {
    this.StartTime = value;
  }

  /**
   * Gets the value of the 'EndTime' field.
   * @return The value of the 'EndTime' field.
   */
  public java.lang.Long getEndTime() {
    return EndTime;
  }

  /**
   * Sets the value of the 'EndTime' field.
   * @param value the value to set.
   */
  public void setEndTime(java.lang.Long value) {
    this.EndTime = value;
  }

  /**
   * Creates a new XdrTimes RecordBuilder.
   * @return A new XdrTimes RecordBuilder
   */
  public static xdrSchema.XdrTimes.Builder newBuilder() {
    return new xdrSchema.XdrTimes.Builder();
  }

  /**
   * Creates a new XdrTimes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new XdrTimes RecordBuilder
   */
  public static xdrSchema.XdrTimes.Builder newBuilder(xdrSchema.XdrTimes.Builder other) {
    return new xdrSchema.XdrTimes.Builder(other);
  }

  /**
   * Creates a new XdrTimes RecordBuilder by copying an existing XdrTimes instance.
   * @param other The existing instance to copy.
   * @return A new XdrTimes RecordBuilder
   */
  public static xdrSchema.XdrTimes.Builder newBuilder(xdrSchema.XdrTimes other) {
    return new xdrSchema.XdrTimes.Builder(other);
  }

  /**
   * RecordBuilder for XdrTimes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<XdrTimes>
    implements org.apache.avro.data.RecordBuilder<XdrTimes> {

    private long SsnInitTime;
    private long StartTime;
    private long EndTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(xdrSchema.XdrTimes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.SsnInitTime)) {
        this.SsnInitTime = data().deepCopy(fields()[0].schema(), other.SsnInitTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.StartTime)) {
        this.StartTime = data().deepCopy(fields()[1].schema(), other.StartTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.EndTime)) {
        this.EndTime = data().deepCopy(fields()[2].schema(), other.EndTime);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing XdrTimes instance
     * @param other The existing instance to copy.
     */
    private Builder(xdrSchema.XdrTimes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.SsnInitTime)) {
        this.SsnInitTime = data().deepCopy(fields()[0].schema(), other.SsnInitTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.StartTime)) {
        this.StartTime = data().deepCopy(fields()[1].schema(), other.StartTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.EndTime)) {
        this.EndTime = data().deepCopy(fields()[2].schema(), other.EndTime);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'SsnInitTime' field.
      * @return The value.
      */
    public java.lang.Long getSsnInitTime() {
      return SsnInitTime;
    }

    /**
      * Sets the value of the 'SsnInitTime' field.
      * @param value The value of 'SsnInitTime'.
      * @return This builder.
      */
    public xdrSchema.XdrTimes.Builder setSsnInitTime(long value) {
      validate(fields()[0], value);
      this.SsnInitTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'SsnInitTime' field has been set.
      * @return True if the 'SsnInitTime' field has been set, false otherwise.
      */
    public boolean hasSsnInitTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'SsnInitTime' field.
      * @return This builder.
      */
    public xdrSchema.XdrTimes.Builder clearSsnInitTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'StartTime' field.
      * @return The value.
      */
    public java.lang.Long getStartTime() {
      return StartTime;
    }

    /**
      * Sets the value of the 'StartTime' field.
      * @param value The value of 'StartTime'.
      * @return This builder.
      */
    public xdrSchema.XdrTimes.Builder setStartTime(long value) {
      validate(fields()[1], value);
      this.StartTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'StartTime' field has been set.
      * @return True if the 'StartTime' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'StartTime' field.
      * @return This builder.
      */
    public xdrSchema.XdrTimes.Builder clearStartTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'EndTime' field.
      * @return The value.
      */
    public java.lang.Long getEndTime() {
      return EndTime;
    }

    /**
      * Sets the value of the 'EndTime' field.
      * @param value The value of 'EndTime'.
      * @return This builder.
      */
    public xdrSchema.XdrTimes.Builder setEndTime(long value) {
      validate(fields()[2], value);
      this.EndTime = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'EndTime' field has been set.
      * @return True if the 'EndTime' field has been set, false otherwise.
      */
    public boolean hasEndTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'EndTime' field.
      * @return This builder.
      */
    public xdrSchema.XdrTimes.Builder clearEndTime() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @SuppressWarnings("unchecked")
    public XdrTimes build() {
      try {
        XdrTimes record = new XdrTimes();
        record.SsnInitTime = fieldSetFlags()[0] ? this.SsnInitTime : (java.lang.Long) defaultValue(fields()[0]);
        record.StartTime = fieldSetFlags()[1] ? this.StartTime : (java.lang.Long) defaultValue(fields()[1]);
        record.EndTime = fieldSetFlags()[2] ? this.EndTime : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<XdrTimes>
    WRITER$ = (org.apache.avro.io.DatumWriter<XdrTimes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<XdrTimes>
    READER$ = (org.apache.avro.io.DatumReader<XdrTimes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
