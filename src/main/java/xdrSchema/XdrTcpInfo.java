/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package xdrSchema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class XdrTcpInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1561311791205834125L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"XdrTcpInfo\",\"namespace\":\"xdrSchema\",\"fields\":[{\"name\":\"SynackToSynTime\",\"type\":\"int\",\"default\":0},{\"name\":\"AckToSynTime\",\"type\":\"int\",\"default\":0},{\"name\":\"FullReportFlag\",\"type\":\"int\",\"default\":0},{\"name\":\"SsnClosReason\",\"type\":\"int\",\"default\":0},{\"name\":\"Resv\",\"type\":\"int\",\"default\":0},{\"name\":\"FirstRequestDelay\",\"type\":\"long\",\"default\":0},{\"name\":\"FirstResponseDelay\",\"type\":\"long\",\"default\":0},{\"name\":\"WindowSize\",\"type\":\"long\",\"default\":0},{\"name\":\"MssSize\",\"type\":\"int\",\"default\":0},{\"name\":\"TcpRetryCount\",\"type\":\"int\",\"default\":0},{\"name\":\"TcpRetryAckCount\",\"type\":\"int\",\"default\":0},{\"name\":\"TcpAckCount\",\"type\":\"int\",\"default\":0},{\"name\":\"TcpConnectStatusNo\",\"type\":\"int\",\"default\":0},{\"name\":\"TcpStatusFirst\",\"type\":\"int\",\"default\":0},{\"name\":\"TcpStatusSecond\",\"type\":\"int\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<XdrTcpInfo> ENCODER =
      new BinaryMessageEncoder<XdrTcpInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<XdrTcpInfo> DECODER =
      new BinaryMessageDecoder<XdrTcpInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<XdrTcpInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<XdrTcpInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<XdrTcpInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this XdrTcpInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a XdrTcpInfo from a ByteBuffer. */
  public static XdrTcpInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int SynackToSynTime;
  @Deprecated public int AckToSynTime;
  @Deprecated public int FullReportFlag;
  @Deprecated public int SsnClosReason;
  @Deprecated public int Resv;
  @Deprecated public long FirstRequestDelay;
  @Deprecated public long FirstResponseDelay;
  @Deprecated public long WindowSize;
  @Deprecated public int MssSize;
  @Deprecated public int TcpRetryCount;
  @Deprecated public int TcpRetryAckCount;
  @Deprecated public int TcpAckCount;
  @Deprecated public int TcpConnectStatusNo;
  @Deprecated public int TcpStatusFirst;
  @Deprecated public int TcpStatusSecond;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public XdrTcpInfo() {}

  /**
   * All-args constructor.
   * @param SynackToSynTime The new value for SynackToSynTime
   * @param AckToSynTime The new value for AckToSynTime
   * @param FullReportFlag The new value for FullReportFlag
   * @param SsnClosReason The new value for SsnClosReason
   * @param Resv The new value for Resv
   * @param FirstRequestDelay The new value for FirstRequestDelay
   * @param FirstResponseDelay The new value for FirstResponseDelay
   * @param WindowSize The new value for WindowSize
   * @param MssSize The new value for MssSize
   * @param TcpRetryCount The new value for TcpRetryCount
   * @param TcpRetryAckCount The new value for TcpRetryAckCount
   * @param TcpAckCount The new value for TcpAckCount
   * @param TcpConnectStatusNo The new value for TcpConnectStatusNo
   * @param TcpStatusFirst The new value for TcpStatusFirst
   * @param TcpStatusSecond The new value for TcpStatusSecond
   */
  public XdrTcpInfo(java.lang.Integer SynackToSynTime, java.lang.Integer AckToSynTime, java.lang.Integer FullReportFlag, java.lang.Integer SsnClosReason, java.lang.Integer Resv, java.lang.Long FirstRequestDelay, java.lang.Long FirstResponseDelay, java.lang.Long WindowSize, java.lang.Integer MssSize, java.lang.Integer TcpRetryCount, java.lang.Integer TcpRetryAckCount, java.lang.Integer TcpAckCount, java.lang.Integer TcpConnectStatusNo, java.lang.Integer TcpStatusFirst, java.lang.Integer TcpStatusSecond) {
    this.SynackToSynTime = SynackToSynTime;
    this.AckToSynTime = AckToSynTime;
    this.FullReportFlag = FullReportFlag;
    this.SsnClosReason = SsnClosReason;
    this.Resv = Resv;
    this.FirstRequestDelay = FirstRequestDelay;
    this.FirstResponseDelay = FirstResponseDelay;
    this.WindowSize = WindowSize;
    this.MssSize = MssSize;
    this.TcpRetryCount = TcpRetryCount;
    this.TcpRetryAckCount = TcpRetryAckCount;
    this.TcpAckCount = TcpAckCount;
    this.TcpConnectStatusNo = TcpConnectStatusNo;
    this.TcpStatusFirst = TcpStatusFirst;
    this.TcpStatusSecond = TcpStatusSecond;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return SynackToSynTime;
    case 1: return AckToSynTime;
    case 2: return FullReportFlag;
    case 3: return SsnClosReason;
    case 4: return Resv;
    case 5: return FirstRequestDelay;
    case 6: return FirstResponseDelay;
    case 7: return WindowSize;
    case 8: return MssSize;
    case 9: return TcpRetryCount;
    case 10: return TcpRetryAckCount;
    case 11: return TcpAckCount;
    case 12: return TcpConnectStatusNo;
    case 13: return TcpStatusFirst;
    case 14: return TcpStatusSecond;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: SynackToSynTime = (java.lang.Integer)value$; break;
    case 1: AckToSynTime = (java.lang.Integer)value$; break;
    case 2: FullReportFlag = (java.lang.Integer)value$; break;
    case 3: SsnClosReason = (java.lang.Integer)value$; break;
    case 4: Resv = (java.lang.Integer)value$; break;
    case 5: FirstRequestDelay = (java.lang.Long)value$; break;
    case 6: FirstResponseDelay = (java.lang.Long)value$; break;
    case 7: WindowSize = (java.lang.Long)value$; break;
    case 8: MssSize = (java.lang.Integer)value$; break;
    case 9: TcpRetryCount = (java.lang.Integer)value$; break;
    case 10: TcpRetryAckCount = (java.lang.Integer)value$; break;
    case 11: TcpAckCount = (java.lang.Integer)value$; break;
    case 12: TcpConnectStatusNo = (java.lang.Integer)value$; break;
    case 13: TcpStatusFirst = (java.lang.Integer)value$; break;
    case 14: TcpStatusSecond = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'SynackToSynTime' field.
   * @return The value of the 'SynackToSynTime' field.
   */
  public java.lang.Integer getSynackToSynTime() {
    return SynackToSynTime;
  }

  /**
   * Sets the value of the 'SynackToSynTime' field.
   * @param value the value to set.
   */
  public void setSynackToSynTime(java.lang.Integer value) {
    this.SynackToSynTime = value;
  }

  /**
   * Gets the value of the 'AckToSynTime' field.
   * @return The value of the 'AckToSynTime' field.
   */
  public java.lang.Integer getAckToSynTime() {
    return AckToSynTime;
  }

  /**
   * Sets the value of the 'AckToSynTime' field.
   * @param value the value to set.
   */
  public void setAckToSynTime(java.lang.Integer value) {
    this.AckToSynTime = value;
  }

  /**
   * Gets the value of the 'FullReportFlag' field.
   * @return The value of the 'FullReportFlag' field.
   */
  public java.lang.Integer getFullReportFlag() {
    return FullReportFlag;
  }

  /**
   * Sets the value of the 'FullReportFlag' field.
   * @param value the value to set.
   */
  public void setFullReportFlag(java.lang.Integer value) {
    this.FullReportFlag = value;
  }

  /**
   * Gets the value of the 'SsnClosReason' field.
   * @return The value of the 'SsnClosReason' field.
   */
  public java.lang.Integer getSsnClosReason() {
    return SsnClosReason;
  }

  /**
   * Sets the value of the 'SsnClosReason' field.
   * @param value the value to set.
   */
  public void setSsnClosReason(java.lang.Integer value) {
    this.SsnClosReason = value;
  }

  /**
   * Gets the value of the 'Resv' field.
   * @return The value of the 'Resv' field.
   */
  public java.lang.Integer getResv() {
    return Resv;
  }

  /**
   * Sets the value of the 'Resv' field.
   * @param value the value to set.
   */
  public void setResv(java.lang.Integer value) {
    this.Resv = value;
  }

  /**
   * Gets the value of the 'FirstRequestDelay' field.
   * @return The value of the 'FirstRequestDelay' field.
   */
  public java.lang.Long getFirstRequestDelay() {
    return FirstRequestDelay;
  }

  /**
   * Sets the value of the 'FirstRequestDelay' field.
   * @param value the value to set.
   */
  public void setFirstRequestDelay(java.lang.Long value) {
    this.FirstRequestDelay = value;
  }

  /**
   * Gets the value of the 'FirstResponseDelay' field.
   * @return The value of the 'FirstResponseDelay' field.
   */
  public java.lang.Long getFirstResponseDelay() {
    return FirstResponseDelay;
  }

  /**
   * Sets the value of the 'FirstResponseDelay' field.
   * @param value the value to set.
   */
  public void setFirstResponseDelay(java.lang.Long value) {
    this.FirstResponseDelay = value;
  }

  /**
   * Gets the value of the 'WindowSize' field.
   * @return The value of the 'WindowSize' field.
   */
  public java.lang.Long getWindowSize() {
    return WindowSize;
  }

  /**
   * Sets the value of the 'WindowSize' field.
   * @param value the value to set.
   */
  public void setWindowSize(java.lang.Long value) {
    this.WindowSize = value;
  }

  /**
   * Gets the value of the 'MssSize' field.
   * @return The value of the 'MssSize' field.
   */
  public java.lang.Integer getMssSize() {
    return MssSize;
  }

  /**
   * Sets the value of the 'MssSize' field.
   * @param value the value to set.
   */
  public void setMssSize(java.lang.Integer value) {
    this.MssSize = value;
  }

  /**
   * Gets the value of the 'TcpRetryCount' field.
   * @return The value of the 'TcpRetryCount' field.
   */
  public java.lang.Integer getTcpRetryCount() {
    return TcpRetryCount;
  }

  /**
   * Sets the value of the 'TcpRetryCount' field.
   * @param value the value to set.
   */
  public void setTcpRetryCount(java.lang.Integer value) {
    this.TcpRetryCount = value;
  }

  /**
   * Gets the value of the 'TcpRetryAckCount' field.
   * @return The value of the 'TcpRetryAckCount' field.
   */
  public java.lang.Integer getTcpRetryAckCount() {
    return TcpRetryAckCount;
  }

  /**
   * Sets the value of the 'TcpRetryAckCount' field.
   * @param value the value to set.
   */
  public void setTcpRetryAckCount(java.lang.Integer value) {
    this.TcpRetryAckCount = value;
  }

  /**
   * Gets the value of the 'TcpAckCount' field.
   * @return The value of the 'TcpAckCount' field.
   */
  public java.lang.Integer getTcpAckCount() {
    return TcpAckCount;
  }

  /**
   * Sets the value of the 'TcpAckCount' field.
   * @param value the value to set.
   */
  public void setTcpAckCount(java.lang.Integer value) {
    this.TcpAckCount = value;
  }

  /**
   * Gets the value of the 'TcpConnectStatusNo' field.
   * @return The value of the 'TcpConnectStatusNo' field.
   */
  public java.lang.Integer getTcpConnectStatusNo() {
    return TcpConnectStatusNo;
  }

  /**
   * Sets the value of the 'TcpConnectStatusNo' field.
   * @param value the value to set.
   */
  public void setTcpConnectStatusNo(java.lang.Integer value) {
    this.TcpConnectStatusNo = value;
  }

  /**
   * Gets the value of the 'TcpStatusFirst' field.
   * @return The value of the 'TcpStatusFirst' field.
   */
  public java.lang.Integer getTcpStatusFirst() {
    return TcpStatusFirst;
  }

  /**
   * Sets the value of the 'TcpStatusFirst' field.
   * @param value the value to set.
   */
  public void setTcpStatusFirst(java.lang.Integer value) {
    this.TcpStatusFirst = value;
  }

  /**
   * Gets the value of the 'TcpStatusSecond' field.
   * @return The value of the 'TcpStatusSecond' field.
   */
  public java.lang.Integer getTcpStatusSecond() {
    return TcpStatusSecond;
  }

  /**
   * Sets the value of the 'TcpStatusSecond' field.
   * @param value the value to set.
   */
  public void setTcpStatusSecond(java.lang.Integer value) {
    this.TcpStatusSecond = value;
  }

  /**
   * Creates a new XdrTcpInfo RecordBuilder.
   * @return A new XdrTcpInfo RecordBuilder
   */
  public static xdrSchema.XdrTcpInfo.Builder newBuilder() {
    return new xdrSchema.XdrTcpInfo.Builder();
  }

  /**
   * Creates a new XdrTcpInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new XdrTcpInfo RecordBuilder
   */
  public static xdrSchema.XdrTcpInfo.Builder newBuilder(xdrSchema.XdrTcpInfo.Builder other) {
    return new xdrSchema.XdrTcpInfo.Builder(other);
  }

  /**
   * Creates a new XdrTcpInfo RecordBuilder by copying an existing XdrTcpInfo instance.
   * @param other The existing instance to copy.
   * @return A new XdrTcpInfo RecordBuilder
   */
  public static xdrSchema.XdrTcpInfo.Builder newBuilder(xdrSchema.XdrTcpInfo other) {
    return new xdrSchema.XdrTcpInfo.Builder(other);
  }

  /**
   * RecordBuilder for XdrTcpInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<XdrTcpInfo>
    implements org.apache.avro.data.RecordBuilder<XdrTcpInfo> {

    private int SynackToSynTime;
    private int AckToSynTime;
    private int FullReportFlag;
    private int SsnClosReason;
    private int Resv;
    private long FirstRequestDelay;
    private long FirstResponseDelay;
    private long WindowSize;
    private int MssSize;
    private int TcpRetryCount;
    private int TcpRetryAckCount;
    private int TcpAckCount;
    private int TcpConnectStatusNo;
    private int TcpStatusFirst;
    private int TcpStatusSecond;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(xdrSchema.XdrTcpInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.SynackToSynTime)) {
        this.SynackToSynTime = data().deepCopy(fields()[0].schema(), other.SynackToSynTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.AckToSynTime)) {
        this.AckToSynTime = data().deepCopy(fields()[1].schema(), other.AckToSynTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.FullReportFlag)) {
        this.FullReportFlag = data().deepCopy(fields()[2].schema(), other.FullReportFlag);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SsnClosReason)) {
        this.SsnClosReason = data().deepCopy(fields()[3].schema(), other.SsnClosReason);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Resv)) {
        this.Resv = data().deepCopy(fields()[4].schema(), other.Resv);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.FirstRequestDelay)) {
        this.FirstRequestDelay = data().deepCopy(fields()[5].schema(), other.FirstRequestDelay);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.FirstResponseDelay)) {
        this.FirstResponseDelay = data().deepCopy(fields()[6].schema(), other.FirstResponseDelay);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.WindowSize)) {
        this.WindowSize = data().deepCopy(fields()[7].schema(), other.WindowSize);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.MssSize)) {
        this.MssSize = data().deepCopy(fields()[8].schema(), other.MssSize);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.TcpRetryCount)) {
        this.TcpRetryCount = data().deepCopy(fields()[9].schema(), other.TcpRetryCount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.TcpRetryAckCount)) {
        this.TcpRetryAckCount = data().deepCopy(fields()[10].schema(), other.TcpRetryAckCount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.TcpAckCount)) {
        this.TcpAckCount = data().deepCopy(fields()[11].schema(), other.TcpAckCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.TcpConnectStatusNo)) {
        this.TcpConnectStatusNo = data().deepCopy(fields()[12].schema(), other.TcpConnectStatusNo);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.TcpStatusFirst)) {
        this.TcpStatusFirst = data().deepCopy(fields()[13].schema(), other.TcpStatusFirst);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.TcpStatusSecond)) {
        this.TcpStatusSecond = data().deepCopy(fields()[14].schema(), other.TcpStatusSecond);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing XdrTcpInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(xdrSchema.XdrTcpInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.SynackToSynTime)) {
        this.SynackToSynTime = data().deepCopy(fields()[0].schema(), other.SynackToSynTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.AckToSynTime)) {
        this.AckToSynTime = data().deepCopy(fields()[1].schema(), other.AckToSynTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.FullReportFlag)) {
        this.FullReportFlag = data().deepCopy(fields()[2].schema(), other.FullReportFlag);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SsnClosReason)) {
        this.SsnClosReason = data().deepCopy(fields()[3].schema(), other.SsnClosReason);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Resv)) {
        this.Resv = data().deepCopy(fields()[4].schema(), other.Resv);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.FirstRequestDelay)) {
        this.FirstRequestDelay = data().deepCopy(fields()[5].schema(), other.FirstRequestDelay);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.FirstResponseDelay)) {
        this.FirstResponseDelay = data().deepCopy(fields()[6].schema(), other.FirstResponseDelay);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.WindowSize)) {
        this.WindowSize = data().deepCopy(fields()[7].schema(), other.WindowSize);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.MssSize)) {
        this.MssSize = data().deepCopy(fields()[8].schema(), other.MssSize);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.TcpRetryCount)) {
        this.TcpRetryCount = data().deepCopy(fields()[9].schema(), other.TcpRetryCount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.TcpRetryAckCount)) {
        this.TcpRetryAckCount = data().deepCopy(fields()[10].schema(), other.TcpRetryAckCount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.TcpAckCount)) {
        this.TcpAckCount = data().deepCopy(fields()[11].schema(), other.TcpAckCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.TcpConnectStatusNo)) {
        this.TcpConnectStatusNo = data().deepCopy(fields()[12].schema(), other.TcpConnectStatusNo);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.TcpStatusFirst)) {
        this.TcpStatusFirst = data().deepCopy(fields()[13].schema(), other.TcpStatusFirst);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.TcpStatusSecond)) {
        this.TcpStatusSecond = data().deepCopy(fields()[14].schema(), other.TcpStatusSecond);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'SynackToSynTime' field.
      * @return The value.
      */
    public java.lang.Integer getSynackToSynTime() {
      return SynackToSynTime;
    }

    /**
      * Sets the value of the 'SynackToSynTime' field.
      * @param value The value of 'SynackToSynTime'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setSynackToSynTime(int value) {
      validate(fields()[0], value);
      this.SynackToSynTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'SynackToSynTime' field has been set.
      * @return True if the 'SynackToSynTime' field has been set, false otherwise.
      */
    public boolean hasSynackToSynTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'SynackToSynTime' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearSynackToSynTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'AckToSynTime' field.
      * @return The value.
      */
    public java.lang.Integer getAckToSynTime() {
      return AckToSynTime;
    }

    /**
      * Sets the value of the 'AckToSynTime' field.
      * @param value The value of 'AckToSynTime'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setAckToSynTime(int value) {
      validate(fields()[1], value);
      this.AckToSynTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'AckToSynTime' field has been set.
      * @return True if the 'AckToSynTime' field has been set, false otherwise.
      */
    public boolean hasAckToSynTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'AckToSynTime' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearAckToSynTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'FullReportFlag' field.
      * @return The value.
      */
    public java.lang.Integer getFullReportFlag() {
      return FullReportFlag;
    }

    /**
      * Sets the value of the 'FullReportFlag' field.
      * @param value The value of 'FullReportFlag'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setFullReportFlag(int value) {
      validate(fields()[2], value);
      this.FullReportFlag = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'FullReportFlag' field has been set.
      * @return True if the 'FullReportFlag' field has been set, false otherwise.
      */
    public boolean hasFullReportFlag() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'FullReportFlag' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearFullReportFlag() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'SsnClosReason' field.
      * @return The value.
      */
    public java.lang.Integer getSsnClosReason() {
      return SsnClosReason;
    }

    /**
      * Sets the value of the 'SsnClosReason' field.
      * @param value The value of 'SsnClosReason'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setSsnClosReason(int value) {
      validate(fields()[3], value);
      this.SsnClosReason = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'SsnClosReason' field has been set.
      * @return True if the 'SsnClosReason' field has been set, false otherwise.
      */
    public boolean hasSsnClosReason() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'SsnClosReason' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearSsnClosReason() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Resv' field.
      * @return The value.
      */
    public java.lang.Integer getResv() {
      return Resv;
    }

    /**
      * Sets the value of the 'Resv' field.
      * @param value The value of 'Resv'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setResv(int value) {
      validate(fields()[4], value);
      this.Resv = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Resv' field has been set.
      * @return True if the 'Resv' field has been set, false otherwise.
      */
    public boolean hasResv() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Resv' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearResv() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'FirstRequestDelay' field.
      * @return The value.
      */
    public java.lang.Long getFirstRequestDelay() {
      return FirstRequestDelay;
    }

    /**
      * Sets the value of the 'FirstRequestDelay' field.
      * @param value The value of 'FirstRequestDelay'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setFirstRequestDelay(long value) {
      validate(fields()[5], value);
      this.FirstRequestDelay = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'FirstRequestDelay' field has been set.
      * @return True if the 'FirstRequestDelay' field has been set, false otherwise.
      */
    public boolean hasFirstRequestDelay() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'FirstRequestDelay' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearFirstRequestDelay() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'FirstResponseDelay' field.
      * @return The value.
      */
    public java.lang.Long getFirstResponseDelay() {
      return FirstResponseDelay;
    }

    /**
      * Sets the value of the 'FirstResponseDelay' field.
      * @param value The value of 'FirstResponseDelay'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setFirstResponseDelay(long value) {
      validate(fields()[6], value);
      this.FirstResponseDelay = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'FirstResponseDelay' field has been set.
      * @return True if the 'FirstResponseDelay' field has been set, false otherwise.
      */
    public boolean hasFirstResponseDelay() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'FirstResponseDelay' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearFirstResponseDelay() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'WindowSize' field.
      * @return The value.
      */
    public java.lang.Long getWindowSize() {
      return WindowSize;
    }

    /**
      * Sets the value of the 'WindowSize' field.
      * @param value The value of 'WindowSize'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setWindowSize(long value) {
      validate(fields()[7], value);
      this.WindowSize = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'WindowSize' field has been set.
      * @return True if the 'WindowSize' field has been set, false otherwise.
      */
    public boolean hasWindowSize() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'WindowSize' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearWindowSize() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'MssSize' field.
      * @return The value.
      */
    public java.lang.Integer getMssSize() {
      return MssSize;
    }

    /**
      * Sets the value of the 'MssSize' field.
      * @param value The value of 'MssSize'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setMssSize(int value) {
      validate(fields()[8], value);
      this.MssSize = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'MssSize' field has been set.
      * @return True if the 'MssSize' field has been set, false otherwise.
      */
    public boolean hasMssSize() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'MssSize' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearMssSize() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'TcpRetryCount' field.
      * @return The value.
      */
    public java.lang.Integer getTcpRetryCount() {
      return TcpRetryCount;
    }

    /**
      * Sets the value of the 'TcpRetryCount' field.
      * @param value The value of 'TcpRetryCount'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setTcpRetryCount(int value) {
      validate(fields()[9], value);
      this.TcpRetryCount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'TcpRetryCount' field has been set.
      * @return True if the 'TcpRetryCount' field has been set, false otherwise.
      */
    public boolean hasTcpRetryCount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'TcpRetryCount' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearTcpRetryCount() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'TcpRetryAckCount' field.
      * @return The value.
      */
    public java.lang.Integer getTcpRetryAckCount() {
      return TcpRetryAckCount;
    }

    /**
      * Sets the value of the 'TcpRetryAckCount' field.
      * @param value The value of 'TcpRetryAckCount'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setTcpRetryAckCount(int value) {
      validate(fields()[10], value);
      this.TcpRetryAckCount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'TcpRetryAckCount' field has been set.
      * @return True if the 'TcpRetryAckCount' field has been set, false otherwise.
      */
    public boolean hasTcpRetryAckCount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'TcpRetryAckCount' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearTcpRetryAckCount() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'TcpAckCount' field.
      * @return The value.
      */
    public java.lang.Integer getTcpAckCount() {
      return TcpAckCount;
    }

    /**
      * Sets the value of the 'TcpAckCount' field.
      * @param value The value of 'TcpAckCount'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setTcpAckCount(int value) {
      validate(fields()[11], value);
      this.TcpAckCount = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'TcpAckCount' field has been set.
      * @return True if the 'TcpAckCount' field has been set, false otherwise.
      */
    public boolean hasTcpAckCount() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'TcpAckCount' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearTcpAckCount() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'TcpConnectStatusNo' field.
      * @return The value.
      */
    public java.lang.Integer getTcpConnectStatusNo() {
      return TcpConnectStatusNo;
    }

    /**
      * Sets the value of the 'TcpConnectStatusNo' field.
      * @param value The value of 'TcpConnectStatusNo'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setTcpConnectStatusNo(int value) {
      validate(fields()[12], value);
      this.TcpConnectStatusNo = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'TcpConnectStatusNo' field has been set.
      * @return True if the 'TcpConnectStatusNo' field has been set, false otherwise.
      */
    public boolean hasTcpConnectStatusNo() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'TcpConnectStatusNo' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearTcpConnectStatusNo() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'TcpStatusFirst' field.
      * @return The value.
      */
    public java.lang.Integer getTcpStatusFirst() {
      return TcpStatusFirst;
    }

    /**
      * Sets the value of the 'TcpStatusFirst' field.
      * @param value The value of 'TcpStatusFirst'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setTcpStatusFirst(int value) {
      validate(fields()[13], value);
      this.TcpStatusFirst = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'TcpStatusFirst' field has been set.
      * @return True if the 'TcpStatusFirst' field has been set, false otherwise.
      */
    public boolean hasTcpStatusFirst() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'TcpStatusFirst' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearTcpStatusFirst() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'TcpStatusSecond' field.
      * @return The value.
      */
    public java.lang.Integer getTcpStatusSecond() {
      return TcpStatusSecond;
    }

    /**
      * Sets the value of the 'TcpStatusSecond' field.
      * @param value The value of 'TcpStatusSecond'.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder setTcpStatusSecond(int value) {
      validate(fields()[14], value);
      this.TcpStatusSecond = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'TcpStatusSecond' field has been set.
      * @return True if the 'TcpStatusSecond' field has been set, false otherwise.
      */
    public boolean hasTcpStatusSecond() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'TcpStatusSecond' field.
      * @return This builder.
      */
    public xdrSchema.XdrTcpInfo.Builder clearTcpStatusSecond() {
      fieldSetFlags()[14] = false;
      return this;
    }

    @SuppressWarnings("unchecked")
    public XdrTcpInfo build() {
      try {
        XdrTcpInfo record = new XdrTcpInfo();
        record.SynackToSynTime = fieldSetFlags()[0] ? this.SynackToSynTime : (java.lang.Integer) defaultValue(fields()[0]);
        record.AckToSynTime = fieldSetFlags()[1] ? this.AckToSynTime : (java.lang.Integer) defaultValue(fields()[1]);
        record.FullReportFlag = fieldSetFlags()[2] ? this.FullReportFlag : (java.lang.Integer) defaultValue(fields()[2]);
        record.SsnClosReason = fieldSetFlags()[3] ? this.SsnClosReason : (java.lang.Integer) defaultValue(fields()[3]);
        record.Resv = fieldSetFlags()[4] ? this.Resv : (java.lang.Integer) defaultValue(fields()[4]);
        record.FirstRequestDelay = fieldSetFlags()[5] ? this.FirstRequestDelay : (java.lang.Long) defaultValue(fields()[5]);
        record.FirstResponseDelay = fieldSetFlags()[6] ? this.FirstResponseDelay : (java.lang.Long) defaultValue(fields()[6]);
        record.WindowSize = fieldSetFlags()[7] ? this.WindowSize : (java.lang.Long) defaultValue(fields()[7]);
        record.MssSize = fieldSetFlags()[8] ? this.MssSize : (java.lang.Integer) defaultValue(fields()[8]);
        record.TcpRetryCount = fieldSetFlags()[9] ? this.TcpRetryCount : (java.lang.Integer) defaultValue(fields()[9]);
        record.TcpRetryAckCount = fieldSetFlags()[10] ? this.TcpRetryAckCount : (java.lang.Integer) defaultValue(fields()[10]);
        record.TcpAckCount = fieldSetFlags()[11] ? this.TcpAckCount : (java.lang.Integer) defaultValue(fields()[11]);
        record.TcpConnectStatusNo = fieldSetFlags()[12] ? this.TcpConnectStatusNo : (java.lang.Integer) defaultValue(fields()[12]);
        record.TcpStatusFirst = fieldSetFlags()[13] ? this.TcpStatusFirst : (java.lang.Integer) defaultValue(fields()[13]);
        record.TcpStatusSecond = fieldSetFlags()[14] ? this.TcpStatusSecond : (java.lang.Integer) defaultValue(fields()[14]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<XdrTcpInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<XdrTcpInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<XdrTcpInfo>
    READER$ = (org.apache.avro.io.DatumReader<XdrTcpInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
