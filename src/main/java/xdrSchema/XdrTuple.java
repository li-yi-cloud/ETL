/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package xdrSchema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class XdrTuple extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4583417705572314585L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"XdrTuple\",\"namespace\":\"xdrSchema\",\"fields\":[{\"name\":\"IpVer\",\"type\":\"int\",\"default\":0},{\"name\":\"Dir\",\"type\":\"int\",\"default\":0},{\"name\":\"L4Proto\",\"type\":\"int\",\"default\":0},{\"name\":\"Resv\",\"type\":\"int\",\"default\":0},{\"name\":\"SrcPort\",\"type\":\"int\",\"default\":0},{\"name\":\"DstPort\",\"type\":\"int\",\"default\":0},{\"name\":\"V4SrcIP\",\"type\":\"long\",\"default\":0},{\"name\":\"V4DstIP\",\"type\":\"long\",\"default\":0},{\"name\":\"StrSrcIP\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"StrSrcCountry\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"StrSrcProvince\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"strDstIP\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"StrDstCountry\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"StrDstProvince\",\"type\":\"string\",\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<XdrTuple> ENCODER =
      new BinaryMessageEncoder<XdrTuple>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<XdrTuple> DECODER =
      new BinaryMessageDecoder<XdrTuple>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<XdrTuple> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<XdrTuple> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<XdrTuple>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this XdrTuple to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a XdrTuple from a ByteBuffer. */
  public static XdrTuple fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int IpVer;
  @Deprecated public int Dir;
  @Deprecated public int L4Proto;
  @Deprecated public int Resv;
  @Deprecated public int SrcPort;
  @Deprecated public int DstPort;
  @Deprecated public long V4SrcIP;
  @Deprecated public long V4DstIP;
  @Deprecated public java.lang.CharSequence StrSrcIP;
  @Deprecated public java.lang.CharSequence StrSrcCountry;
  @Deprecated public java.lang.CharSequence StrSrcProvince;
  @Deprecated public java.lang.CharSequence strDstIP;
  @Deprecated public java.lang.CharSequence StrDstCountry;
  @Deprecated public java.lang.CharSequence StrDstProvince;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public XdrTuple() {}

  /**
   * All-args constructor.
   * @param IpVer The new value for IpVer
   * @param Dir The new value for Dir
   * @param L4Proto The new value for L4Proto
   * @param Resv The new value for Resv
   * @param SrcPort The new value for SrcPort
   * @param DstPort The new value for DstPort
   * @param V4SrcIP The new value for V4SrcIP
   * @param V4DstIP The new value for V4DstIP
   * @param StrSrcIP The new value for StrSrcIP
   * @param StrSrcCountry The new value for StrSrcCountry
   * @param StrSrcProvince The new value for StrSrcProvince
   * @param strDstIP The new value for strDstIP
   * @param StrDstCountry The new value for StrDstCountry
   * @param StrDstProvince The new value for StrDstProvince
   */
  public XdrTuple(java.lang.Integer IpVer, java.lang.Integer Dir, java.lang.Integer L4Proto, java.lang.Integer Resv, java.lang.Integer SrcPort, java.lang.Integer DstPort, java.lang.Long V4SrcIP, java.lang.Long V4DstIP, java.lang.CharSequence StrSrcIP, java.lang.CharSequence StrSrcCountry, java.lang.CharSequence StrSrcProvince, java.lang.CharSequence strDstIP, java.lang.CharSequence StrDstCountry, java.lang.CharSequence StrDstProvince) {
    this.IpVer = IpVer;
    this.Dir = Dir;
    this.L4Proto = L4Proto;
    this.Resv = Resv;
    this.SrcPort = SrcPort;
    this.DstPort = DstPort;
    this.V4SrcIP = V4SrcIP;
    this.V4DstIP = V4DstIP;
    this.StrSrcIP = StrSrcIP;
    this.StrSrcCountry = StrSrcCountry;
    this.StrSrcProvince = StrSrcProvince;
    this.strDstIP = strDstIP;
    this.StrDstCountry = StrDstCountry;
    this.StrDstProvince = StrDstProvince;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return IpVer;
    case 1: return Dir;
    case 2: return L4Proto;
    case 3: return Resv;
    case 4: return SrcPort;
    case 5: return DstPort;
    case 6: return V4SrcIP;
    case 7: return V4DstIP;
    case 8: return StrSrcIP;
    case 9: return StrSrcCountry;
    case 10: return StrSrcProvince;
    case 11: return strDstIP;
    case 12: return StrDstCountry;
    case 13: return StrDstProvince;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: IpVer = (java.lang.Integer)value$; break;
    case 1: Dir = (java.lang.Integer)value$; break;
    case 2: L4Proto = (java.lang.Integer)value$; break;
    case 3: Resv = (java.lang.Integer)value$; break;
    case 4: SrcPort = (java.lang.Integer)value$; break;
    case 5: DstPort = (java.lang.Integer)value$; break;
    case 6: V4SrcIP = (java.lang.Long)value$; break;
    case 7: V4DstIP = (java.lang.Long)value$; break;
    case 8: StrSrcIP = (java.lang.CharSequence)value$; break;
    case 9: StrSrcCountry = (java.lang.CharSequence)value$; break;
    case 10: StrSrcProvince = (java.lang.CharSequence)value$; break;
    case 11: strDstIP = (java.lang.CharSequence)value$; break;
    case 12: StrDstCountry = (java.lang.CharSequence)value$; break;
    case 13: StrDstProvince = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'IpVer' field.
   * @return The value of the 'IpVer' field.
   */
  public java.lang.Integer getIpVer() {
    return IpVer;
  }

  /**
   * Sets the value of the 'IpVer' field.
   * @param value the value to set.
   */
  public void setIpVer(java.lang.Integer value) {
    this.IpVer = value;
  }

  /**
   * Gets the value of the 'Dir' field.
   * @return The value of the 'Dir' field.
   */
  public java.lang.Integer getDir() {
    return Dir;
  }

  /**
   * Sets the value of the 'Dir' field.
   * @param value the value to set.
   */
  public void setDir(java.lang.Integer value) {
    this.Dir = value;
  }

  /**
   * Gets the value of the 'L4Proto' field.
   * @return The value of the 'L4Proto' field.
   */
  public java.lang.Integer getL4Proto() {
    return L4Proto;
  }

  /**
   * Sets the value of the 'L4Proto' field.
   * @param value the value to set.
   */
  public void setL4Proto(java.lang.Integer value) {
    this.L4Proto = value;
  }

  /**
   * Gets the value of the 'Resv' field.
   * @return The value of the 'Resv' field.
   */
  public java.lang.Integer getResv() {
    return Resv;
  }

  /**
   * Sets the value of the 'Resv' field.
   * @param value the value to set.
   */
  public void setResv(java.lang.Integer value) {
    this.Resv = value;
  }

  /**
   * Gets the value of the 'SrcPort' field.
   * @return The value of the 'SrcPort' field.
   */
  public java.lang.Integer getSrcPort() {
    return SrcPort;
  }

  /**
   * Sets the value of the 'SrcPort' field.
   * @param value the value to set.
   */
  public void setSrcPort(java.lang.Integer value) {
    this.SrcPort = value;
  }

  /**
   * Gets the value of the 'DstPort' field.
   * @return The value of the 'DstPort' field.
   */
  public java.lang.Integer getDstPort() {
    return DstPort;
  }

  /**
   * Sets the value of the 'DstPort' field.
   * @param value the value to set.
   */
  public void setDstPort(java.lang.Integer value) {
    this.DstPort = value;
  }

  /**
   * Gets the value of the 'V4SrcIP' field.
   * @return The value of the 'V4SrcIP' field.
   */
  public java.lang.Long getV4SrcIP() {
    return V4SrcIP;
  }

  /**
   * Sets the value of the 'V4SrcIP' field.
   * @param value the value to set.
   */
  public void setV4SrcIP(java.lang.Long value) {
    this.V4SrcIP = value;
  }

  /**
   * Gets the value of the 'V4DstIP' field.
   * @return The value of the 'V4DstIP' field.
   */
  public java.lang.Long getV4DstIP() {
    return V4DstIP;
  }

  /**
   * Sets the value of the 'V4DstIP' field.
   * @param value the value to set.
   */
  public void setV4DstIP(java.lang.Long value) {
    this.V4DstIP = value;
  }

  /**
   * Gets the value of the 'StrSrcIP' field.
   * @return The value of the 'StrSrcIP' field.
   */
  public java.lang.CharSequence getStrSrcIP() {
    return StrSrcIP;
  }

  /**
   * Sets the value of the 'StrSrcIP' field.
   * @param value the value to set.
   */
  public void setStrSrcIP(java.lang.CharSequence value) {
    this.StrSrcIP = value;
  }

  /**
   * Gets the value of the 'StrSrcCountry' field.
   * @return The value of the 'StrSrcCountry' field.
   */
  public java.lang.CharSequence getStrSrcCountry() {
    return StrSrcCountry;
  }

  /**
   * Sets the value of the 'StrSrcCountry' field.
   * @param value the value to set.
   */
  public void setStrSrcCountry(java.lang.CharSequence value) {
    this.StrSrcCountry = value;
  }

  /**
   * Gets the value of the 'StrSrcProvince' field.
   * @return The value of the 'StrSrcProvince' field.
   */
  public java.lang.CharSequence getStrSrcProvince() {
    return StrSrcProvince;
  }

  /**
   * Sets the value of the 'StrSrcProvince' field.
   * @param value the value to set.
   */
  public void setStrSrcProvince(java.lang.CharSequence value) {
    this.StrSrcProvince = value;
  }

  /**
   * Gets the value of the 'strDstIP' field.
   * @return The value of the 'strDstIP' field.
   */
  public java.lang.CharSequence getStrDstIP() {
    return strDstIP;
  }

  /**
   * Sets the value of the 'strDstIP' field.
   * @param value the value to set.
   */
  public void setStrDstIP(java.lang.CharSequence value) {
    this.strDstIP = value;
  }

  /**
   * Gets the value of the 'StrDstCountry' field.
   * @return The value of the 'StrDstCountry' field.
   */
  public java.lang.CharSequence getStrDstCountry() {
    return StrDstCountry;
  }

  /**
   * Sets the value of the 'StrDstCountry' field.
   * @param value the value to set.
   */
  public void setStrDstCountry(java.lang.CharSequence value) {
    this.StrDstCountry = value;
  }

  /**
   * Gets the value of the 'StrDstProvince' field.
   * @return The value of the 'StrDstProvince' field.
   */
  public java.lang.CharSequence getStrDstProvince() {
    return StrDstProvince;
  }

  /**
   * Sets the value of the 'StrDstProvince' field.
   * @param value the value to set.
   */
  public void setStrDstProvince(java.lang.CharSequence value) {
    this.StrDstProvince = value;
  }

  /**
   * Creates a new XdrTuple RecordBuilder.
   * @return A new XdrTuple RecordBuilder
   */
  public static xdrSchema.XdrTuple.Builder newBuilder() {
    return new xdrSchema.XdrTuple.Builder();
  }

  /**
   * Creates a new XdrTuple RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new XdrTuple RecordBuilder
   */
  public static xdrSchema.XdrTuple.Builder newBuilder(xdrSchema.XdrTuple.Builder other) {
    return new xdrSchema.XdrTuple.Builder(other);
  }

  /**
   * Creates a new XdrTuple RecordBuilder by copying an existing XdrTuple instance.
   * @param other The existing instance to copy.
   * @return A new XdrTuple RecordBuilder
   */
  public static xdrSchema.XdrTuple.Builder newBuilder(xdrSchema.XdrTuple other) {
    return new xdrSchema.XdrTuple.Builder(other);
  }

  /**
   * RecordBuilder for XdrTuple instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<XdrTuple>
    implements org.apache.avro.data.RecordBuilder<XdrTuple> {

    private int IpVer;
    private int Dir;
    private int L4Proto;
    private int Resv;
    private int SrcPort;
    private int DstPort;
    private long V4SrcIP;
    private long V4DstIP;
    private java.lang.CharSequence StrSrcIP;
    private java.lang.CharSequence StrSrcCountry;
    private java.lang.CharSequence StrSrcProvince;
    private java.lang.CharSequence strDstIP;
    private java.lang.CharSequence StrDstCountry;
    private java.lang.CharSequence StrDstProvince;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(xdrSchema.XdrTuple.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.IpVer)) {
        this.IpVer = data().deepCopy(fields()[0].schema(), other.IpVer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Dir)) {
        this.Dir = data().deepCopy(fields()[1].schema(), other.Dir);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.L4Proto)) {
        this.L4Proto = data().deepCopy(fields()[2].schema(), other.L4Proto);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Resv)) {
        this.Resv = data().deepCopy(fields()[3].schema(), other.Resv);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.SrcPort)) {
        this.SrcPort = data().deepCopy(fields()[4].schema(), other.SrcPort);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.DstPort)) {
        this.DstPort = data().deepCopy(fields()[5].schema(), other.DstPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.V4SrcIP)) {
        this.V4SrcIP = data().deepCopy(fields()[6].schema(), other.V4SrcIP);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.V4DstIP)) {
        this.V4DstIP = data().deepCopy(fields()[7].schema(), other.V4DstIP);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.StrSrcIP)) {
        this.StrSrcIP = data().deepCopy(fields()[8].schema(), other.StrSrcIP);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.StrSrcCountry)) {
        this.StrSrcCountry = data().deepCopy(fields()[9].schema(), other.StrSrcCountry);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.StrSrcProvince)) {
        this.StrSrcProvince = data().deepCopy(fields()[10].schema(), other.StrSrcProvince);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.strDstIP)) {
        this.strDstIP = data().deepCopy(fields()[11].schema(), other.strDstIP);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.StrDstCountry)) {
        this.StrDstCountry = data().deepCopy(fields()[12].schema(), other.StrDstCountry);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.StrDstProvince)) {
        this.StrDstProvince = data().deepCopy(fields()[13].schema(), other.StrDstProvince);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing XdrTuple instance
     * @param other The existing instance to copy.
     */
    private Builder(xdrSchema.XdrTuple other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.IpVer)) {
        this.IpVer = data().deepCopy(fields()[0].schema(), other.IpVer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Dir)) {
        this.Dir = data().deepCopy(fields()[1].schema(), other.Dir);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.L4Proto)) {
        this.L4Proto = data().deepCopy(fields()[2].schema(), other.L4Proto);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Resv)) {
        this.Resv = data().deepCopy(fields()[3].schema(), other.Resv);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.SrcPort)) {
        this.SrcPort = data().deepCopy(fields()[4].schema(), other.SrcPort);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.DstPort)) {
        this.DstPort = data().deepCopy(fields()[5].schema(), other.DstPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.V4SrcIP)) {
        this.V4SrcIP = data().deepCopy(fields()[6].schema(), other.V4SrcIP);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.V4DstIP)) {
        this.V4DstIP = data().deepCopy(fields()[7].schema(), other.V4DstIP);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.StrSrcIP)) {
        this.StrSrcIP = data().deepCopy(fields()[8].schema(), other.StrSrcIP);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.StrSrcCountry)) {
        this.StrSrcCountry = data().deepCopy(fields()[9].schema(), other.StrSrcCountry);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.StrSrcProvince)) {
        this.StrSrcProvince = data().deepCopy(fields()[10].schema(), other.StrSrcProvince);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.strDstIP)) {
        this.strDstIP = data().deepCopy(fields()[11].schema(), other.strDstIP);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.StrDstCountry)) {
        this.StrDstCountry = data().deepCopy(fields()[12].schema(), other.StrDstCountry);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.StrDstProvince)) {
        this.StrDstProvince = data().deepCopy(fields()[13].schema(), other.StrDstProvince);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'IpVer' field.
      * @return The value.
      */
    public java.lang.Integer getIpVer() {
      return IpVer;
    }

    /**
      * Sets the value of the 'IpVer' field.
      * @param value The value of 'IpVer'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setIpVer(int value) {
      validate(fields()[0], value);
      this.IpVer = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'IpVer' field has been set.
      * @return True if the 'IpVer' field has been set, false otherwise.
      */
    public boolean hasIpVer() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'IpVer' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearIpVer() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Dir' field.
      * @return The value.
      */
    public java.lang.Integer getDir() {
      return Dir;
    }

    /**
      * Sets the value of the 'Dir' field.
      * @param value The value of 'Dir'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setDir(int value) {
      validate(fields()[1], value);
      this.Dir = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Dir' field has been set.
      * @return True if the 'Dir' field has been set, false otherwise.
      */
    public boolean hasDir() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Dir' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearDir() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'L4Proto' field.
      * @return The value.
      */
    public java.lang.Integer getL4Proto() {
      return L4Proto;
    }

    /**
      * Sets the value of the 'L4Proto' field.
      * @param value The value of 'L4Proto'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setL4Proto(int value) {
      validate(fields()[2], value);
      this.L4Proto = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'L4Proto' field has been set.
      * @return True if the 'L4Proto' field has been set, false otherwise.
      */
    public boolean hasL4Proto() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'L4Proto' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearL4Proto() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Resv' field.
      * @return The value.
      */
    public java.lang.Integer getResv() {
      return Resv;
    }

    /**
      * Sets the value of the 'Resv' field.
      * @param value The value of 'Resv'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setResv(int value) {
      validate(fields()[3], value);
      this.Resv = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Resv' field has been set.
      * @return True if the 'Resv' field has been set, false otherwise.
      */
    public boolean hasResv() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Resv' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearResv() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'SrcPort' field.
      * @return The value.
      */
    public java.lang.Integer getSrcPort() {
      return SrcPort;
    }

    /**
      * Sets the value of the 'SrcPort' field.
      * @param value The value of 'SrcPort'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setSrcPort(int value) {
      validate(fields()[4], value);
      this.SrcPort = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'SrcPort' field has been set.
      * @return True if the 'SrcPort' field has been set, false otherwise.
      */
    public boolean hasSrcPort() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'SrcPort' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearSrcPort() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'DstPort' field.
      * @return The value.
      */
    public java.lang.Integer getDstPort() {
      return DstPort;
    }

    /**
      * Sets the value of the 'DstPort' field.
      * @param value The value of 'DstPort'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setDstPort(int value) {
      validate(fields()[5], value);
      this.DstPort = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'DstPort' field has been set.
      * @return True if the 'DstPort' field has been set, false otherwise.
      */
    public boolean hasDstPort() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'DstPort' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearDstPort() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'V4SrcIP' field.
      * @return The value.
      */
    public java.lang.Long getV4SrcIP() {
      return V4SrcIP;
    }

    /**
      * Sets the value of the 'V4SrcIP' field.
      * @param value The value of 'V4SrcIP'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setV4SrcIP(long value) {
      validate(fields()[6], value);
      this.V4SrcIP = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'V4SrcIP' field has been set.
      * @return True if the 'V4SrcIP' field has been set, false otherwise.
      */
    public boolean hasV4SrcIP() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'V4SrcIP' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearV4SrcIP() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'V4DstIP' field.
      * @return The value.
      */
    public java.lang.Long getV4DstIP() {
      return V4DstIP;
    }

    /**
      * Sets the value of the 'V4DstIP' field.
      * @param value The value of 'V4DstIP'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setV4DstIP(long value) {
      validate(fields()[7], value);
      this.V4DstIP = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'V4DstIP' field has been set.
      * @return True if the 'V4DstIP' field has been set, false otherwise.
      */
    public boolean hasV4DstIP() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'V4DstIP' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearV4DstIP() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'StrSrcIP' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrSrcIP() {
      return StrSrcIP;
    }

    /**
      * Sets the value of the 'StrSrcIP' field.
      * @param value The value of 'StrSrcIP'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setStrSrcIP(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.StrSrcIP = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'StrSrcIP' field has been set.
      * @return True if the 'StrSrcIP' field has been set, false otherwise.
      */
    public boolean hasStrSrcIP() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'StrSrcIP' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearStrSrcIP() {
      StrSrcIP = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'StrSrcCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrSrcCountry() {
      return StrSrcCountry;
    }

    /**
      * Sets the value of the 'StrSrcCountry' field.
      * @param value The value of 'StrSrcCountry'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setStrSrcCountry(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.StrSrcCountry = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'StrSrcCountry' field has been set.
      * @return True if the 'StrSrcCountry' field has been set, false otherwise.
      */
    public boolean hasStrSrcCountry() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'StrSrcCountry' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearStrSrcCountry() {
      StrSrcCountry = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'StrSrcProvince' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrSrcProvince() {
      return StrSrcProvince;
    }

    /**
      * Sets the value of the 'StrSrcProvince' field.
      * @param value The value of 'StrSrcProvince'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setStrSrcProvince(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.StrSrcProvince = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'StrSrcProvince' field has been set.
      * @return True if the 'StrSrcProvince' field has been set, false otherwise.
      */
    public boolean hasStrSrcProvince() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'StrSrcProvince' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearStrSrcProvince() {
      StrSrcProvince = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'strDstIP' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrDstIP() {
      return strDstIP;
    }

    /**
      * Sets the value of the 'strDstIP' field.
      * @param value The value of 'strDstIP'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setStrDstIP(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.strDstIP = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'strDstIP' field has been set.
      * @return True if the 'strDstIP' field has been set, false otherwise.
      */
    public boolean hasStrDstIP() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'strDstIP' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearStrDstIP() {
      strDstIP = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'StrDstCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrDstCountry() {
      return StrDstCountry;
    }

    /**
      * Sets the value of the 'StrDstCountry' field.
      * @param value The value of 'StrDstCountry'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setStrDstCountry(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.StrDstCountry = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'StrDstCountry' field has been set.
      * @return True if the 'StrDstCountry' field has been set, false otherwise.
      */
    public boolean hasStrDstCountry() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'StrDstCountry' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearStrDstCountry() {
      StrDstCountry = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'StrDstProvince' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrDstProvince() {
      return StrDstProvince;
    }

    /**
      * Sets the value of the 'StrDstProvince' field.
      * @param value The value of 'StrDstProvince'.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder setStrDstProvince(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.StrDstProvince = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'StrDstProvince' field has been set.
      * @return True if the 'StrDstProvince' field has been set, false otherwise.
      */
    public boolean hasStrDstProvince() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'StrDstProvince' field.
      * @return This builder.
      */
    public xdrSchema.XdrTuple.Builder clearStrDstProvince() {
      StrDstProvince = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @SuppressWarnings("unchecked")
    public XdrTuple build() {
      try {
        XdrTuple record = new XdrTuple();
        record.IpVer = fieldSetFlags()[0] ? this.IpVer : (java.lang.Integer) defaultValue(fields()[0]);
        record.Dir = fieldSetFlags()[1] ? this.Dir : (java.lang.Integer) defaultValue(fields()[1]);
        record.L4Proto = fieldSetFlags()[2] ? this.L4Proto : (java.lang.Integer) defaultValue(fields()[2]);
        record.Resv = fieldSetFlags()[3] ? this.Resv : (java.lang.Integer) defaultValue(fields()[3]);
        record.SrcPort = fieldSetFlags()[4] ? this.SrcPort : (java.lang.Integer) defaultValue(fields()[4]);
        record.DstPort = fieldSetFlags()[5] ? this.DstPort : (java.lang.Integer) defaultValue(fields()[5]);
        record.V4SrcIP = fieldSetFlags()[6] ? this.V4SrcIP : (java.lang.Long) defaultValue(fields()[6]);
        record.V4DstIP = fieldSetFlags()[7] ? this.V4DstIP : (java.lang.Long) defaultValue(fields()[7]);
        record.StrSrcIP = fieldSetFlags()[8] ? this.StrSrcIP : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.StrSrcCountry = fieldSetFlags()[9] ? this.StrSrcCountry : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.StrSrcProvince = fieldSetFlags()[10] ? this.StrSrcProvince : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.strDstIP = fieldSetFlags()[11] ? this.strDstIP : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.StrDstCountry = fieldSetFlags()[12] ? this.StrDstCountry : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.StrDstProvince = fieldSetFlags()[13] ? this.StrDstProvince : (java.lang.CharSequence) defaultValue(fields()[13]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<XdrTuple>
    WRITER$ = (org.apache.avro.io.DatumWriter<XdrTuple>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<XdrTuple>
    READER$ = (org.apache.avro.io.DatumReader<XdrTuple>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
